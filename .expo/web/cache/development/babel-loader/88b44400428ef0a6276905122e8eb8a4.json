{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ayman/code/react-native-udemy/rn-starter/src/screens/ColorScreen.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { FlatList } from \"react-native-gesture-handler\";\n\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColor = _useState2[1];\n\n  console.log(colors);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Add color\",\n    onPress: function onPress() {\n      setColor([].concat(_toConsumableArray(colors), [randomRGB()]));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: colors,\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar randomRGB = function randomRGB() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n};\n\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"sources":["/Users/ayman/code/react-native-udemy/rn-starter/src/screens/ColorScreen.js"],"names":["React","useState","FlatList","ColorScreen","colors","setColor","console","log","randomRGB","item","height","width","backgroundColor","red","Math","floor","random","green","blue","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,QAAT,QAAyB,8BAAzB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACGF,QAAQ,CAAC,EAAD,CADX;AAAA;AAAA,MACjBG,MADiB;AAAA,MACTC,QADS;;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbC,MAAAA,QAAQ,8BAAKD,MAAL,IAAaI,SAAS,EAAtB,GAAR;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEJ,MADR;AAEE,IAAA,YAAY,EAAE,sBAAAK,IAAI;AAAA,aAAIA,IAAJ;AAAA,KAFpB;AAGE,IAAA,UAAU,EAAE,0BAAY;AAAA,UAAVA,IAAU,QAAVA,IAAU;AACpB,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE,GAAtB;AAA2BC,UAAAA,eAAe,EAAEH;AAA5C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAkBD,CArBD;;AAuBA,IAAMD,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AAEA,kBAAcH,GAAd,UAAsBI,KAAtB,UAAgCC,IAAhC;AACD,CAND;;AAOA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAelB,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet, Button } from \"react-native\";\nimport { FlatList } from \"react-native-gesture-handler\";\n\nconst ColorScreen = () => {\n  const [colors, setColor] = useState([]);\n  console.log(colors)\n  return (\n    <View>\n      <Button\n        title=\"Add color\"\n        onPress={() => {\n          setColor([...colors, randomRGB()]);\n        }}\n      />\n     \n      <FlatList\n        data={colors}\n        keyExtractor={item => item}\n        renderItem={({item}) => {\n            return <View style={{ height: 100, width: 100, backgroundColor: item }} />\n        }}\n      />\n    </View>\n  );\n};\n\nconst randomRGB = () => {\n  const red = Math.floor(Math.random() * 256);\n  const green = Math.floor(Math.random() * 256);\n  const blue = Math.floor(Math.random() * 256);\n\n  return `rgb(${red}, ${green}, ${blue})`;\n};\nconst styles = StyleSheet.create({});\n\nexport default ColorScreen;\n"]},"metadata":{},"sourceType":"module"}